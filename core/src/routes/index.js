// DON'T CHANGE THIS FILE MANUALLY!
// This file is auto-generated by routeCreateor.js
// File created at Wed Jan 24 2018 18:13:04 GMT+0800 (CST)
import React from 'react'
import ReactDOM from 'react-dom'
import PM from '../PM'

var allComponents = {};

// Generate user_home_root1
var user_home_root1_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/home"
    }
  },
  render() {
    return (<div ref="user_home_root1_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/home');

    var node = ReactDOM.findDOMNode(this.refs.user_home_root1_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/index.html');
    var INNER_COMP_user_home_root1;
    try {
     INNER_COMP_user_home_root1 = require('/Users/primeton/git/poc-12306/my12306/src/pages/index.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/index.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_home_root1,
      subPageURL: '/home',
      filePath: 'pages/index.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_home_root1_comp"] = user_home_root1_comp;

var user_home_root1 = {
  path: '',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_home_root1_comp)
    })
  }
}



// Generate user_home
var Inner_user_home_comp = require('../components/primary');
var user_home_comp = React.createClass({
  getDefaultProps() {
    return {
      urlFullPath: "/home"
    }
  },
  render() {
    // this.props.children is from react router path
    return (<Inner_user_home_comp navbar={ {"layout":"tree","hidden":false} }  children={ this.props.children } items={ [{"id":"user_home_root1","urlPath":"","page":"pages/index.html","name":"","urlFullPath":"/home","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/index.html"}] } />);
  }
})
allComponents["user_home_comp"] = user_home_comp;
user_home_comp.isCore = true;

var user_home = {
  path: 'home',


  getChildRoutes(location, cb) {
    require.ensure([], (require) => {
      cb(null, [
          user_home_root1
      ])
    })
  },

  /*getIndexRoute(location, cb) {
    require.ensure([], function(require) {
      cb(null, {
        component: user_home_root1_comp
      })
    })
  },*/


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_home_comp)
    })
  }
}


// Generate user_login_root1
var user_login_root1_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/login"
    }
  },
  render() {
    return (<div ref="user_login_root1_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/login');

    var node = ReactDOM.findDOMNode(this.refs.user_login_root1_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/login/login.html');
    var INNER_COMP_user_login_root1;
    try {
     INNER_COMP_user_login_root1 = require('/Users/primeton/git/poc-12306/my12306/src/pages/login/login.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/login/login.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_login_root1,
      subPageURL: '/login',
      filePath: 'pages/login/login.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_login_root1_comp"] = user_login_root1_comp;

var user_login_root1 = {
  path: '',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_login_root1_comp)
    })
  }
}



// Generate user_login
var Inner_user_login_comp = require('../components/primary');
var user_login_comp = React.createClass({
  getDefaultProps() {
    return {
      urlFullPath: "/login"
    }
  },
  render() {
    // this.props.children is from react router path
    return (<Inner_user_login_comp navbar={ {"layout":"tree","hidden":false} }  children={ this.props.children } items={ [{"id":"user_login_root1","urlPath":"","page":"pages/login/login.html","name":"","urlFullPath":"/login","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/login/login.html"}] } />);
  }
})
allComponents["user_login_comp"] = user_login_comp;
user_login_comp.isCore = true;

var user_login = {
  path: 'login',


  getChildRoutes(location, cb) {
    require.ensure([], (require) => {
      cb(null, [
          user_login_root1
      ])
    })
  },

  /*getIndexRoute(location, cb) {
    require.ensure([], function(require) {
      cb(null, {
        component: user_login_root1_comp
      })
    })
  },*/


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_login_comp)
    })
  }
}


// Generate user_signup_root1
var user_signup_root1_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/signup"
    }
  },
  render() {
    return (<div ref="user_signup_root1_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/signup');

    var node = ReactDOM.findDOMNode(this.refs.user_signup_root1_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/signup/signup.html');
    var INNER_COMP_user_signup_root1;
    try {
     INNER_COMP_user_signup_root1 = require('/Users/primeton/git/poc-12306/my12306/src/pages/signup/signup.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/signup/signup.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_signup_root1,
      subPageURL: '/signup',
      filePath: 'pages/signup/signup.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_signup_root1_comp"] = user_signup_root1_comp;

var user_signup_root1 = {
  path: '',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_signup_root1_comp)
    })
  }
}



// Generate user_signup
var Inner_user_signup_comp = require('../components/primary');
var user_signup_comp = React.createClass({
  getDefaultProps() {
    return {
      urlFullPath: "/signup"
    }
  },
  render() {
    // this.props.children is from react router path
    return (<Inner_user_signup_comp navbar={ {"layout":"tree","hidden":false} }  children={ this.props.children } items={ [{"id":"user_signup_root1","urlPath":"","page":"pages/signup/signup.html","name":"","urlFullPath":"/signup","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/signup/signup.html"}] } />);
  }
})
allComponents["user_signup_comp"] = user_signup_comp;
user_signup_comp.isCore = true;

var user_signup = {
  path: 'signup',


  getChildRoutes(location, cb) {
    require.ensure([], (require) => {
      cb(null, [
          user_signup_root1
      ])
    })
  },

  /*getIndexRoute(location, cb) {
    require.ensure([], function(require) {
      cb(null, {
        component: user_signup_root1_comp
      })
    })
  },*/


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_signup_comp)
    })
  }
}


// Generate user_admin_platform_buy_ticket
var user_admin_platform_buy_ticket_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/admin/booktickets"
    }
  },
  render() {
    return (<div ref="user_admin_platform_buy_ticket_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/admin/booktickets');

    var node = ReactDOM.findDOMNode(this.refs.user_admin_platform_buy_ticket_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html');
    var INNER_COMP_user_admin_platform_buy_ticket;
    try {
     INNER_COMP_user_admin_platform_buy_ticket = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_admin_platform_buy_ticket,
      subPageURL: '/admin/booktickets',
      filePath: 'pages/admin/ticket/ticketList.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_admin_platform_buy_ticket_comp"] = user_admin_platform_buy_ticket_comp;

var user_admin_platform_buy_ticket = {
  path: 'booktickets',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_admin_platform_buy_ticket_comp)
    })
  }
}


// Generate user_admin_platform_query_ticket
var user_admin_platform_query_ticket_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/admin/querytickets"
    }
  },
  render() {
    return (<div ref="user_admin_platform_query_ticket_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/admin/querytickets');

    var node = ReactDOM.findDOMNode(this.refs.user_admin_platform_query_ticket_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html');
    var INNER_COMP_user_admin_platform_query_ticket;
    try {
     INNER_COMP_user_admin_platform_query_ticket = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_admin_platform_query_ticket,
      subPageURL: '/admin/querytickets',
      filePath: 'pages/admin/ticket/ticketList.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_admin_platform_query_ticket_comp"] = user_admin_platform_query_ticket_comp;

var user_admin_platform_query_ticket = {
  path: 'querytickets',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_admin_platform_query_ticket_comp)
    })
  }
}


// Generate user_admin_platform_order
var user_admin_platform_order_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/admin/ordermgr"
    }
  },
  render() {
    return (<div ref="user_admin_platform_order_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/admin/ordermgr');

    var node = ReactDOM.findDOMNode(this.refs.user_admin_platform_order_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ordermgr/orderList.html');
    var INNER_COMP_user_admin_platform_order;
    try {
     INNER_COMP_user_admin_platform_order = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ordermgr/orderList.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/admin/ordermgr/orderList.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_admin_platform_order,
      subPageURL: '/admin/ordermgr',
      filePath: 'pages/admin/ordermgr/orderList.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_admin_platform_order_comp"] = user_admin_platform_order_comp;

var user_admin_platform_order = {
  path: 'ordermgr',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_admin_platform_order_comp)
    })
  }
}


// Generate user_admin_platform_passenger
var user_admin_platform_passenger_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/admin/platformpassenger"
    }
  },
  render() {
    return (<div ref="user_admin_platform_passenger_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/admin/platformpassenger');

    var node = ReactDOM.findDOMNode(this.refs.user_admin_platform_passenger_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/passenger/passengerList.html');
    var INNER_COMP_user_admin_platform_passenger;
    try {
     INNER_COMP_user_admin_platform_passenger = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/passenger/passengerList.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/admin/passenger/passengerList.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_admin_platform_passenger,
      subPageURL: '/admin/platformpassenger',
      filePath: 'pages/admin/passenger/passengerList.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_admin_platform_passenger_comp"] = user_admin_platform_passenger_comp;

var user_admin_platform_passenger = {
  path: 'platformpassenger',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_admin_platform_passenger_comp)
    })
  }
}


// Generate user_admin_platform_book_ticket
var user_admin_platform_book_ticket_comp = React.createClass({
  contextTypes: {
    selectNavItem: React.PropTypes.func
  },
  getDefaultProps() {
    return {
      urlFullPath: "/admin/bookticket"
    }
  },
  render() {
    return (<div ref="user_admin_platform_book_ticket_comp_inner"></div>)
  },
  componentDidMount() {
    console.time("subpage render");

    this.context.selectNavItem && this.context.selectNavItem('/admin/bookticket');

    var node = ReactDOM.findDOMNode(this.refs.user_admin_platform_book_ticket_comp_inner);
    var hm = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/bookTicket.html');
    var INNER_COMP_user_admin_platform_book_ticket;
    try {
     INNER_COMP_user_admin_platform_book_ticket = require('/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/bookTicket.html');
    } catch(err) {
      console.warn("Can't find component by path", '/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/bookTicket.html', err);
    }
    PM.loadSubPage({
      innerNode: node,
      subPageHTML: INNER_COMP_user_admin_platform_book_ticket,
      subPageURL: '/admin/bookticket',
      filePath: 'pages/admin/ticket/bookTicket.html'
    });
    console.timeEnd("subpage render");
  }
})
allComponents["user_admin_platform_book_ticket_comp"] = user_admin_platform_book_ticket_comp;

var user_admin_platform_book_ticket = {
  path: 'bookticket',


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_admin_platform_book_ticket_comp)
    })
  }
}



// Generate user_home_admin
var Inner_user_home_admin_comp = require('../components/primary');
var user_home_admin_comp = React.createClass({
  getDefaultProps() {
    return {
      urlFullPath: "/admin"
    }
  },
  render() {
    // this.props.children is from react router path
    return (<Inner_user_home_admin_comp navbar={ {"layout":"tree","hidden":false} }  children={ this.props.children } items={ [{"id":"user_admin_platform_buy_ticket","name":"车票预订","urlPath":"booktickets","page":"pages/admin/ticket/ticketList.html","urlFullPath":"/admin/booktickets","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html"},{"id":"user_admin_platform_query_ticket","name":"余票查询","urlPath":"querytickets","page":"pages/admin/ticket/ticketList.html","urlFullPath":"/admin/querytickets","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/ticketList.html"},{"id":"user_admin_platform_order","name":"订单管理","urlPath":"ordermgr","page":"pages/admin/ordermgr/orderList.html","urlFullPath":"/admin/ordermgr","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/admin/ordermgr/orderList.html"},{"id":"user_admin_platform_passenger","name":"乘客管理","urlPath":"platformpassenger","page":"pages/admin/passenger/passengerList.html","urlFullPath":"/admin/platformpassenger","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/admin/passenger/passengerList.html"},{"id":"user_admin_platform_book_ticket","urlPath":"bookticket","page":"pages/admin/ticket/bookTicket.html","urlFullPath":"/admin/bookticket","absPagePath":"/Users/primeton/git/poc-12306/my12306/src/pages/admin/ticket/bookTicket.html"}] } />);
  }
})
allComponents["user_home_admin_comp"] = user_home_admin_comp;
user_home_admin_comp.isCore = true;

var user_home_admin = {
  path: 'admin',


  getChildRoutes(location, cb) {
    require.ensure([], (require) => {
      cb(null, [
          user_admin_platform_buy_ticket,
          user_admin_platform_query_ticket,
          user_admin_platform_order,
          user_admin_platform_passenger,
          user_admin_platform_book_ticket
      ])
    })
  },

  /*getIndexRoute(location, cb) {
    require.ensure([], function(require) {
      cb(null, {
        component: user_admin_platform_buy_ticket_comp
      })
    })
  },*/


  getComponent(location, cb) {
    require.ensure([], (require) => {
        cb(null, user_home_admin_comp)
    })
  }
}

var AppDefault = user_home_comp;
var AppContainer = React.createClass({
  renderRoot() {
    // this.props.children || <AppDefault /> won't satisfy child path is ""
    if (PM.getCurrentPage() === "") {
      return <AppDefault />
    }
    return this.props.children || <AppDefault />;
  },
  render: function() {
    this.updatePMPageInfo();
    return (
      <div>
        {this.renderRoot()}
        <div id="notification"></div>
      </div>
    )
  },
  //current page url, path params, primary page url
  updatePMPageInfo() {
    var props = this.props;
    var params = props.params || {};
    var routes = props.routes;
    var paths = [];
    routes && routes.forEach((route)=> {
      if (route.path && route.path !== "/") {
        paths.push(route.path);
      }
    })

    if (paths.length < 1) {
      PM.setPageInfo({
        fullPath: "",
        currentPath: "",
        primaryPage: "",
        secondaryPage: "",
        params: params
      });
      return;
    }
    var currentPath = "/" + paths.join("/");

    var lastRoute = routes[routes.length - 1];
    if (lastRoute.component && !lastRoute.path) {
      var lastCompRouterPath = lastRoute.component.routerPath;
      if (lastCompRouterPath) {
        currentPath = lastCompRouterPath;
      }
      if (currentPath.substring(0, 1) !== "/") {
        currentPath = "/" + currentPath;
      }
    }

    var primaryPage = currentPath;
    // if have secondary path;
    if (paths.length > 2) {
      primaryPage = "/" + paths.slice(0, paths.length - 1).join("/");
    }

    PM.setPageInfo({
        fullPath: props.location.pathname,
        currentPath: currentPath,
        primaryPage: primaryPage,
        secondaryPage: currentPath,
        params: params
    });
  }
});
var route = {
  component: 'div',
  childRoutes: [{
    path: "/",
    component: AppContainer,
    childRoutes: [
        user_home,
        user_login,
        user_signup,
        user_home_admin
    ]
  }]
}
//export default route
export {route as default, allComponents}
